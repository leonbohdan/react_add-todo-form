{"version":3,"sources":["api/users.js","api/todos.js","components/TodoList/TodoList.jsx","App.jsx","index.js"],"names":["users","id","name","username","email","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","todos","userId","title","completed","TodoList","state","status","this","props","className","map","todo","key","user","htmlFor","type","checked","onChange","event","setState","target","React","Component","preparedTodos","todosFromServer","usersFromServer","find","App","userName","titleOfTodo","titleError","userError","handleChange","value","replace","handleSubmit","preventDefault","length","onSubmit","placeholder","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.82e566f1.chunk.js","sourcesContent":["const users = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    address: {\n      street: 'Kulas Light',\n      suite: 'Apt. 556',\n      city: 'Gwenborough',\n      zipcode: '92998-3874',\n      geo: {\n        lat: '-37.3159',\n        lng: '81.1496',\n      },\n    },\n    phone: '1-770-736-8031 x56442',\n    website: 'hildegard.org',\n    company: {\n      name: 'Romaguera-Crona',\n      catchPhrase: 'Multi-layered client-server neural-net',\n      bs: 'harness real-time e-markets',\n    },\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    address: {\n      street: 'Victor Plains',\n      suite: 'Suite 879',\n      city: 'Wisokyburgh',\n      zipcode: '90566-7771',\n      geo: {\n        lat: '-43.9509',\n        lng: '-34.4618',\n      },\n    },\n    phone: '010-692-6593 x09125',\n    website: 'anastasia.net',\n    company: {\n      name: 'Deckow-Crist',\n      catchPhrase: 'Proactive didactic contingency',\n      bs: 'synergize scalable supply-chains',\n    },\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    address: {\n      street: 'Douglas Extension',\n      suite: 'Suite 847',\n      city: 'McKenziehaven',\n      zipcode: '59590-4157',\n      geo: {\n        lat: '-68.6102',\n        lng: '-47.0653',\n      },\n    },\n    phone: '1-463-123-4447',\n    website: 'ramiro.info',\n    company: {\n      name: 'Romaguera-Jacobson',\n      catchPhrase: 'Face to face bifurcated interface',\n      bs: 'e-enable strategic applications',\n    },\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    address: {\n      street: 'Hoeger Mall',\n      suite: 'Apt. 692',\n      city: 'South Elvis',\n      zipcode: '53919-4257',\n      geo: {\n        lat: '29.4572',\n        lng: '-164.2990',\n      },\n    },\n    phone: '493-170-9623 x156',\n    website: 'kale.biz',\n    company: {\n      name: 'Robel-Corkery',\n      catchPhrase: 'Multi-tiered zero tolerance productivity',\n      bs: 'transition cutting-edge web services',\n    },\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    address: {\n      street: 'Skiles Walks',\n      suite: 'Suite 351',\n      city: 'Roscoeview',\n      zipcode: '33263',\n      geo: {\n        lat: '-31.8129',\n        lng: '62.5342',\n      },\n    },\n    phone: '(254)954-1289',\n    website: 'demarco.info',\n    company: {\n      name: 'Keebler LLC',\n      catchPhrase: 'User-centric fault-tolerant solution',\n      bs: 'revolutionize end-to-end systems',\n    },\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    address: {\n      street: 'Norberto Crossing',\n      suite: 'Apt. 950',\n      city: 'South Christy',\n      zipcode: '23505-1337',\n      geo: {\n        lat: '-71.4197',\n        lng: '71.7478',\n      },\n    },\n    phone: '1-477-935-8478 x6430',\n    website: 'ola.org',\n    company: {\n      name: 'Considine-Lockman',\n      catchPhrase: 'Synchronised bottom-line interface',\n      bs: 'e-enable innovative applications',\n    },\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    address: {\n      street: 'Rex Trail',\n      suite: 'Suite 280',\n      city: 'Howemouth',\n      zipcode: '58804-1099',\n      geo: {\n        lat: '24.8918',\n        lng: '21.8984',\n      },\n    },\n    phone: '210.067.6132',\n    website: 'elvis.io',\n    company: {\n      name: 'Johns Group',\n      catchPhrase: 'Configurable multimedia task-force',\n      bs: 'generate enterprise e-tailers',\n    },\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    address: {\n      street: 'Ellsworth Summit',\n      suite: 'Suite 729',\n      city: 'Aliyaview',\n      zipcode: '45169',\n      geo: {\n        lat: '-14.3990',\n        lng: '-120.7677',\n      },\n    },\n    phone: '586.493.6943 x140',\n    website: 'jacynthe.com',\n    company: {\n      name: 'Abernathy Group',\n      catchPhrase: 'Implemented secondary concept',\n      bs: 'e-enable extensible e-tailers',\n    },\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    address: {\n      street: 'Dayna Park',\n      suite: 'Suite 449',\n      city: 'Bartholomebury',\n      zipcode: '76495-3109',\n      geo: {\n        lat: '24.6463',\n        lng: '-168.8889',\n      },\n    },\n    phone: '(775)976-6794 x41206',\n    website: 'conrad.com',\n    company: {\n      name: 'Yost and Sons',\n      catchPhrase: 'Switchable contextually-based project',\n      bs: 'aggregate real-time technologies',\n    },\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    address: {\n      street: 'Kattie Turnpike',\n      suite: 'Suite 198',\n      city: 'Lebsackbury',\n      zipcode: '31428-2261',\n      geo: {\n        lat: '-38.2386',\n        lng: '57.2232',\n      },\n    },\n    phone: '024-648-3804',\n    website: 'ambrose.net',\n    company: {\n      name: 'Hoeger LLC',\n      catchPhrase: 'Centralized empowering task-force',\n      bs: 'target end-to-end models',\n    },\n  },\n];\n\nexport default users;\n","/* eslint-disable max-len */\n\nconst todos = [\n  {\n    userId: 1,\n    id: 1,\n    title: 'delectus aut autem',\n    completed: false,\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n  },\n];\n\nexport default todos;\n","import React from 'react';\nimport './TodoList.scss';\nimport PropTypes from 'prop-types';\n\nexport class TodoList extends React.Component {\n  state = {\n    status: false,\n  }\n\n  render() {\n    const { todos } = this.props;\n    const { status } = this.state;\n\n    return (\n      <div className=\"todolist\">\n        <div className=\"todolist__header\">\n          <p>Name</p>\n          <p>Task</p>\n          <p>Status</p>\n        </div>\n        {todos.map(todo => (\n          <div key={todo.id} className=\"todolist__item\">\n            <p>{`${todo.user.name} (id: ${todo.user.id})`}</p>\n            <p>{todo.title}</p>\n            <label\n              htmlFor={`status-check-${todo.id}`}\n              className={status\n                ? 'todolist__item--completed'\n                : 'todolist__item--uncompleted'}\n            >\n              {status ? 'Completed' : 'Uncompleted'}\n            </label>\n            <input\n              className=\"status-check\"\n              type=\"checkbox\"\n              id={`status-check-${todo.id}`}\n              checked={status}\n              onChange={(event) => {\n                this.setState({\n                  status: event.target.checked,\n                });\n              }}\n            />\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { TodoList } from './components/TodoList';\n\nconst preparedTodos = todosFromServer.map(todo => ({\n  ...todo,\n  user: usersFromServer.find(user => user.id === todo.userId),\n}));\n\nexport class App extends Component {\n  state = {\n    todos: [...preparedTodos],\n    userName: '',\n    titleOfTodo: '',\n    titleError: false,\n    userError: false,\n  };\n\n  handleChange = (event) => {\n    const { name, value, type, checked } = event.target;\n\n    this.setState({\n      [name]: type === 'checkbox' ? checked : value.replace('  ', ' '),\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { titleOfTodo, userName } = this.state;\n\n    if (!titleOfTodo) {\n      this.setState({\n        titleError: true,\n      });\n    }\n\n    if (!userName) {\n      this.setState({\n        userError: true,\n      });\n    }\n\n    if (!titleOfTodo || !userName) {\n      return;\n    }\n\n    this.setState(state => ({\n      todos: [\n        ...state.todos,\n        {\n          id: state.todos.length + 1,\n          title: state.titleOfTodo,\n          user: usersFromServer.find(user => user.name === state.userName),\n          completed: false,\n        },\n      ],\n    }));\n\n    this.setState({\n      user: '',\n      titleOfTodo: '',\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Add todo form</h1>\n        <span className=\"item\">\n          <span>Users: </span>\n          {usersFromServer.length}\n        </span>\n\n        <form className=\"form\" onSubmit={this.handleSubmit}>\n          <span className=\"item\">\n            <input\n              type=\"text\"\n              name=\"titleOfTodo\"\n              placeholder=\"Type new todo\"\n              value={this.state.titleOfTodo}\n              onChange={this.handleChange}\n            />\n            {this.state.titleError && (\n              <span className=\"form__error\">Please enter the message</span>\n            )}\n          </span>\n\n          <span className=\"item\">\n            <select\n              name=\"userName\"\n              value={this.state.user}\n              onChange={this.handleChange}\n            >\n              <option value=\"\">Choose a user</option>\n\n              {usersFromServer.map(user => (\n                <option value={user.name} key={user.id}>\n                  {user.name}\n                </option>\n              ))}\n            </select>\n            {this.state.userError && (\n              <span className=\"form__error\">Please choose user</span>\n            )}\n          </span>\n\n          <span className=\"item\">\n            <button type=\"submit\" name=\"newTodo\">\n              Add new todo\n            </button>\n          </span>\n        </form>\n\n        <h3>List of todos</h3>\n        <TodoList todos={this.state.todos} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}